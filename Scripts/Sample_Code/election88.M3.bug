# Bugs model for election88 model with redundant parameterization

model {
  for (i in 1:n){
    y[i] ~ dbin (p.bound[i], 1)
    p.bound[i] <- max(0, min(1, p[i]))
    logit(p[i]) <- Xbeta[i]
    Xbeta[i] <- b.0 + b.female*female[i] + b.black*black[i] +
      b.female.black*female[i]*black[i] +
      b.age[age[i]] + b.edu[edu[i]] + b.age.edu[age[i],edu[i]] +
      b.state[state[i]]
  }
  b.0 ~ dnorm (0, .0001)
  b.female ~ dnorm (0, .0001)
  b.black ~ dnorm (0, .0001)
  b.female.black ~ dnorm (0, .0001)
  for (j in 1:n.age){
    b.age[j] <- xi.age*(b.age.raw[j] - mean(b.age.raw[]))
    b.age.raw[j] ~ dnorm(0, tau.age.raw)
  }
  for (j in 1:n.edu){
    b.edu[j] <- xi.edu*(b.edu.raw[j] - mean(b.edu.raw[]))
    b.edu.raw[j] ~ dnorm(0, tau.edu.raw)
  }
  for (j in 1:n.age){
    for (k in 1:n.edu){
      b.age.edu[j,k] <- xi.age.edu*(b.age.edu.raw[j,k] - mean(b.age.edu.raw[,]))
      b.age.edu.raw[j,k] ~ dnorm(0, tau.age.edu.raw)
    }
  }
  for (j in 1:n.state){
    b.state[j] <- xi.state*(b.state.raw[j] - mean(b.state.raw[]))
    b.state.raw[j] ~ dnorm(b.state.raw.hat[j], tau.state.raw)
    b.state.raw.hat[j] <- b.region.raw[region[j]] + b.v.prev.raw*v.prev[j]
  }
  b.v.prev <- xi.state*b.v.prev
  b.v.prev.raw ~ dnorm (0, .0001) 
  for (j in 1:n.region) {
    b.region[j] <- xi.state*b.region.raw[j]
    b.region.raw[j] ~ dnorm(0, tau.region.raw)
  }
  tau.age.raw <- pow(sigma.age.raw, -2)
  tau.edu.raw <- pow(sigma.edu.raw, -2)
  tau.age.edu.raw <- pow(sigma.age.edu.raw, -2)
  tau.state.raw <- pow(sigma.state.raw, -2)
  tau.region.raw <- pow(sigma.region.raw, -2)

  sigma.age.raw ~ dunif (0, 100)
  sigma.edu.raw ~ dunif (0, 100)
  sigma.age.edu.raw ~ dunif (0, 100)
  sigma.state.raw ~ dunif (0, 100)
  sigma.region.raw ~ dunif (0, 100)

  xi.age ~ dunif (0, 100)
  xi.edu ~ dunif (0, 100)
  xi.age.edu ~ dunif (0, 100)
  xi.state ~ dunif (0, 100)
  sigma.age <- xi.age*sigma.age.raw
  sigma.edu <- xi.edu*sigma.edu.raw
  sigma.age.edu <- xi.age.edu*sigma.age.edu.raw
  sigma.state <- xi.state*sigma.state.raw
  sigma.region <- xi.state*sigma.region.raw  # states are nested within regions
}
